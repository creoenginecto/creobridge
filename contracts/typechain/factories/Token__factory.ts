/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Token, TokenInterface } from "../Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeOn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "state",
        type: "bool",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620011093803806200110983398101604081905262000034916200040d565b8383600362000044838262000526565b50600462000053828262000526565b50506005805460ff191660ff85161790555062000089336200007784600a62000707565b6200008390846200071f565b62000093565b5050505062000772565b6001600160a01b038216620000ef5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b806002600082825462000103919062000739565b90915550506001600160a01b03821660008181526020818152604080832080548601905551848152600080516020620010e9833981519152910160405180910390a362000153600083836200015c565b5050565b505050565b600554610100900460ff1680156200017d57506001600160a01b0382163014155b1562000157576000620001926002836200074f565b9050620001a1833083620001a7565b50505050565b6001600160a01b0383166200020d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401620000e6565b6001600160a01b038216620002715760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401620000e6565b6001600160a01b03831660009081526020819052604090205481811015620002eb5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401620000e6565b6001600160a01b0384811660008181526020818152604080832087870390559387168083529184902080548701905592518581529092600080516020620010e9833981519152910160405180910390a3620001a18484846200015c565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200037057600080fd5b81516001600160401b03808211156200038d576200038d62000348565b604051601f8301601f19908116603f01168101908282118183101715620003b857620003b862000348565b81604052838152602092508683858801011115620003d557600080fd5b600091505b83821015620003f95785820183015181830184015290820190620003da565b600093810190920192909252949350505050565b600080600080608085870312156200042457600080fd5b84516001600160401b03808211156200043c57600080fd5b6200044a888389016200035e565b955060208701519150808211156200046157600080fd5b5062000470878288016200035e565b935050604085015160ff811681146200048857600080fd5b6060959095015193969295505050565b600181811c90821680620004ad57607f821691505b602082108103620004ce57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200015757600081815260208120601f850160051c81016020861015620004fd5750805b601f850160051c820191505b818110156200051e5782815560010162000509565b505050505050565b81516001600160401b0381111562000542576200054262000348565b6200055a8162000553845462000498565b84620004d4565b602080601f831160018114620005925760008415620005795750858301515b600019600386901b1c1916600185901b1785556200051e565b600085815260208120601f198616915b82811015620005c357888601518255948401946001909101908401620005a2565b5085821015620005e25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620006495781600019048211156200062d576200062d620005f2565b808516156200063b57918102915b93841c93908002906200060d565b509250929050565b600082620006625750600162000701565b81620006715750600062000701565b81600181146200068a57600281146200069557620006b5565b600191505062000701565b60ff841115620006a957620006a9620005f2565b50506001821b62000701565b5060208310610133831016604e8410600b8410161715620006da575081810a62000701565b620006e6838362000608565b8060001904821115620006fd57620006fd620005f2565b0290505b92915050565b60006200071860ff84168362000651565b9392505050565b8082028115828204841417620007015762000701620005f2565b80820180821115620007015762000701620005f2565b6000826200076d57634e487b7160e01b600052601260045260246000fd5b500490565b61096780620007826000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063395093511161008c57806395d89b411161006657806395d89b41146101b2578063a457c2d7146101ba578063a9059cbb146101cd578063dd62ed3e146101e057600080fd5b806339509351146101645780634f335d0a1461017757806370a082311461018957600080fd5b8063025a4865146100d457806306fdde03146100e9578063095ea7b31461010757806318160ddd1461012a57806323b872dd1461013c578063313ce5671461014f575b600080fd5b6100e76100e236600461076d565b6101f3565b005b6100f1610227565b6040516100fe9190610796565b60405180910390f35b61011a610115366004610800565b6102b9565b60405190151581526020016100fe565b6002545b6040519081526020016100fe565b61011a61014a36600461082a565b6102d3565b60055460405160ff90911681526020016100fe565b61011a610172366004610800565b6102f7565b60055461011a90610100900460ff1681565b61012e610197366004610866565b6001600160a01b031660009081526020819052604090205490565b6100f1610319565b61011a6101c8366004610800565b610328565b61011a6101db366004610800565b6103a8565b61012e6101ee366004610881565b6103b6565b600554610100900460ff1615158115150361020d57600080fd5b600580549115156101000261ff0019909216919091179055565b606060038054610236906108b4565b80601f0160208091040260200160405190810160405280929190818152602001828054610262906108b4565b80156102af5780601f10610284576101008083540402835291602001916102af565b820191906000526020600020905b81548152906001019060200180831161029257829003601f168201915b5050505050905090565b6000336102c78185856103e1565b60019150505b92915050565b6000336102e1858285610505565b6102ec85858561057f565b506001949350505050565b6000336102c781858561030a83836103b6565b61031491906108ee565b6103e1565b606060048054610236906108b4565b6000338161033682866103b6565b90508381101561039b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102ec82868684036103e1565b6000336102c781858561057f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104435760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610392565b6001600160a01b0382166104a45760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610392565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061051184846103b6565b90506000198114610579578181101561056c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610392565b61057984848484036103e1565b50505050565b6001600160a01b0383166105e35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610392565b6001600160a01b0382166106455760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610392565b6001600160a01b038316600090815260208190526040902054818110156106bd5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610392565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361057984848461072e565b505050565b600554610100900460ff16801561074e57506001600160a01b0382163014155b1561072957600061076060028361090f565b905061057983308361057f565b60006020828403121561077f57600080fd5b8135801515811461078f57600080fd5b9392505050565b600060208083528351808285015260005b818110156107c3578581018301518582016040015282016107a7565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107fb57600080fd5b919050565b6000806040838503121561081357600080fd5b61081c836107e4565b946020939093013593505050565b60008060006060848603121561083f57600080fd5b610848846107e4565b9250610856602085016107e4565b9150604084013590509250925092565b60006020828403121561087857600080fd5b61078f826107e4565b6000806040838503121561089457600080fd5b61089d836107e4565b91506108ab602084016107e4565b90509250929050565b600181811c908216806108c857607f821691505b6020821081036108e857634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102cd57634e487b7160e01b600052601160045260246000fd5b60008261092c57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212205335c536db37ff6f70ef26ace9cfa813ae5acf689445e1f3353cc97b8669ef2d64736f6c63430008120033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

export class Token__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _totalSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Token> {
    return super.deploy(
      _name,
      _symbol,
      _decimals,
      _totalSupply,
      overrides || {}
    ) as Promise<Token>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _totalSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimals,
      _totalSupply,
      overrides || {}
    );
  }
  attach(address: string): Token {
    return super.attach(address) as Token;
  }
  connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
